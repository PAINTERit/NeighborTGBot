import telebot
from telebot.types import Message, CallbackQuery

from bot_functions import (create_meme, get_answer, get_cat_status_code,
                           get_last_new, get_quote_author, get_quote_text)
from config import TG_TOKEN

bot = telebot.TeleBot(TG_TOKEN)


class Meme:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞.
    """
    text: str
    photo: str


@bot.message_handler(commands=["start"])
def hello(message: Message) -> None:
    """
    –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º. –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã.
    :param message: Message
    :return: None
    """
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_quote = telebot.types.KeyboardButton("/quote üìú")
    button_cat = telebot.types.KeyboardButton("/cat üêà")
    button_yes_no = telebot.types.KeyboardButton("/question ‚ùì")
    button_news = telebot.types.KeyboardButton("/news üåê")
    button_meme = telebot.types.KeyboardButton("/meme üê∏")
    keyboard.row(button_quote, button_cat, button_yes_no, button_news, button_meme)
    bot.send_message(
        message.chat.id,
        "–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–æ—Å–µ–¥—Å–∫–∏–π –±–æ—Ç!\n–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –∏—Å–ø–æ–ª–Ω–∏—Ç—å üòé",
        reply_markup=keyboard,
    )


@bot.message_handler(commands=["cat"])
def cat_image(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã.
    :param message: Message
    :return: None
    """
    keyboard = telebot.types.InlineKeyboardMarkup()
    button_yes = telebot.types.InlineKeyboardButton("–î–∞", callback_data="cat_yes")
    button_no = telebot.types.InlineKeyboardButton("–ù–µ—Ç", callback_data="cat_no")
    keyboard.row(button_yes, button_no)
    bot.send_message(
        message.chat.id,
        "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Å—Ç–∞—Ç—É—Å –∫–æ–¥–∞ —Å –∫–æ—Ç–∏–∫–æ–º?",
        reply_markup=keyboard,
    )


@bot.message_handler(commands=["quote"])
def quote(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ü–∏—Ç–∞—Ç–æ–π, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã.
    :param message: Message
    :return: None
    """
    keyboard = telebot.types.InlineKeyboardMarkup()
    button_yes = telebot.types.InlineKeyboardButton("–î–∞", callback_data="quote_yes")
    button_no = telebot.types.InlineKeyboardButton("–ù–µ—Ç", callback_data="quote_no")
    keyboard.row(button_yes, button_no)
    bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É?", reply_markup=keyboard)


@bot.message_handler(commands=["news"])
def last_new(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–æ–≤–æ—Å—Ç—å—é.
    :param message: Message
    :return: None
    """
    bot.send_message(message.chat.id, get_last_new())


@bot.message_handler(commands=["question"])
def yes_or_no(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å –¥–ª—è –±–æ—Ç–∞.
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id, "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç' üòâ"
    )
    bot.register_next_step_handler(message, answer)


def answer(message:  Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–¥–∞—á–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param message: Message
    :return: None
    """
    bot.send_animation(message.chat.id, get_answer())


@bot.message_handler(commands=["meme"])
def meme_hello(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    :param message: Message
    :return: None
    """
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏–∫—Ä–µ–ø–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞.")
    bot.register_next_step_handler(message, get_info)


@bot.message_handler(content_types=["photo"])
def get_info(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–º–∞.
    :param message: Message
    :return: None
    """

    file_info = bot.get_file(message.photo[-1].file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    src = f"user_images/{file_info.file_id}.jpg"
    with open(src, "wb") as new_file:
        new_file.write(downloaded_file)

    Meme.photo = src

    bot.send_message(message.chat.id, "–î–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç.")
    bot.register_next_step_handler(message, get_text)


def get_text(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
    :param message: Message
    :return: None
    """
    Meme.text = message.text
    bot.send_message(message.chat.id, "–í–æ—Ç —Ç–≤–æ–π –º–µ–º!")
    send_meme(message)


def send_meme(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–º–∞.
    :param message: Message
    :return: None
    """
    bot.send_photo(message.chat.id, create_meme(Meme.photo, Meme.text))


@bot.callback_query_handler(func=lambda call: True)
def handle(call: CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.
    :param call: CallbackQuery
    :return: None
    """
    if call.data == "quote":
        quote()
    elif call.data == "cat_image":
        cat_image()
    elif call.data == "yes_no":
        yes_or_no()
    elif call.data == "cat_yes":
        bot.send_photo(call.message.chat.id, get_cat_status_code())
    elif call.data == "quote_yes":
        bot.send_message(
            call.message.chat.id, f"{get_quote_text()}\n{get_quote_author()}"
        )
    else:
        bot.send_message(call.message.chat.id, "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å! üòû")
    bot.answer_callback_query(call.id)


@bot.message_handler(content_types=["text"])
def hello(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö.
    :param message: Message
    :return: None
    """
    bot.send_message(
        message.chat.id, "–¢—ã –ø—Ä–æ—Å–∏—à—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ üôÅ –õ—É—á—à–µ –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é!"
    )


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
